欲实现的功能
一、主界面功能
    1、存储测试的参数文件（.INF文件），按照甲方标准来存储。
    2、对日志建立一个单独的文件夹，并以每个月产生一个日志文件，以防止日志文件过大。
        删除超过半年以上的日志，或者进行重新文件命名，形成新的文件。
    3、每次发布时自动加入版本号。（比如编译时间，git版本号）
    4、增加帮助栏，增加说明书。
    7、指令反馈错误是否考虑进行软件自动断电，重新连接，重新恢复测量状态。
    8、多线程运行时，是真线程还是伪线程。当电脑连接4个FPGA，1一个AMR。暂且不知道UDP网口是不是一个线程。
        也就会同时有5个线程接受网口数据，另外界面一个线程，总共需要6个线程。这六个线程在CPU是完全独立还是CPU切片运行呢？
	9、界面缩放功能中增加按钮靠左恒定距离，按钮靠右恒定距离，按钮靠上恒定距离，按钮靠下恒定距离。
        （这些功能的按钮大小和字体大小都不缩放）
    10、可考虑对探测器线程的数据包进行缓存一定数量后再写出。
    11、在继电器、四探测器、以及ARM连接时，弹框显示正在连接中，阻止用户误操作。

已具备的功能：
一、主界面
    1、程序生成的可执行文件图标换为nuclear.ico。
    2、配置文件记录用户的输入IP、PORT、UDP信息、上一次存储文件的路径等等信息。并JSON能够读取以及写入中文路径。
    3、连接/断开4个TCP网络。
    4、网口向硬件发送固定指令数据。
    5、UDP接受炮号，并刷新。
    6、实时打印运行日志。
    7、保存数据。
    8、以炮号为文件夹保存文件
    9、自动测量的使用逻辑检查。检测各个按钮之间的互斥逻辑，禁止输入，禁止使用。
    10、四个网口 多线程处理数据。
    11、读取文件16进制内容，发送TCP数据，能量刻度表。
    12、发送炮号更新，但未收到数据，也必须发送停止指令。
    13、状态栏中显示接受数据长度（比如字节数）。
    14、实现网口接收缓存区大小设置，目前设置为3MB，根据相关资料查询，该空间大小大概最大为4MB多一点。
    15、解决一些warning问题。关于int转char的问题采用BYTE来解决警告。
    16、增加日志文件功能。
    17、修改了CXrays_64ChannelDlg::CXrays_64ChannelDlg()中变量列表初始化顺序混乱的问题。
    18、在手动测量的计时器中增加了kill自身。以解决测量数据只有一半的问题。
    20、实现界面缩放功能。
    21、添加指令反馈功能，相关信息会打印在日志文件中。
    22、合并了四个网口的ConnectTCP函数。
    23、菜单栏主界面各增加一个电源设置选项，控制继电器。
    24、主界面采用单独按钮控制ARM。“温度电压监控”按钮，按下后立马发下指令查询温度（6个）、电压（1个）电流（1个）。
        之后再用定时器轮巡（定时长度可以考虑做到菜单栏设置中）。
		将读取时间、温度、电压电流监控数据写入日志（单独日志）。按照日期建立文件名，每天一个文件，过24点自动新建文件。
    25、ARM每次查询时，必须获取到全部数据，某个数据缺失时，则打印xx或--。
    26、主界面的IP、Port参数，4各FPGA，1个继电器，1个ARM。一共六个TCP设备。放在菜单栏/设置中。采用Setting.json进行参数保存。
    27、增加阈值功能，对{0x12, 0x34, 0x00, 0x0F, 0xFA, 0x12, /*0x00, 0x00, 0x00, 0x0F*/, 0xAB, 0xCD };阈值对应道数，限定范围：0~2048，默认值：15
    28、合并四个线程函数，提炼公共的部分。